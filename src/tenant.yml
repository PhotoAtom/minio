apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
  name: minio
  namespace: photoatom-object-storage
  labels:
    app: minio
spec:
  configuration:
    name: minio-storage-configuration
  env: []
  externalCertSecret:
    - name: minio-tls
      type: cert-manager.io/v1
  features:
    bucketDNS: false
    domains: {}
  image: quay.io/minio/minio:RELEASE.2024-08-03T04-33-23Z
  mountPath: /export
  podManagementPolicy: Parallel
  pools:
    - containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      name: storage
      resources:
        requests:
          memory: "100Mi"
          cpu: "100m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      servers: 4
      volumeClaimTemplate:
        apiVersion: v1
        kind: persistentvolumeclaims
        metadata: {}
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
          storageClassName: csi-hostpath-sc
      volumesPerServer: 1
  priorityClassName: ""
  requestAutoCert: false
  serviceAccountName: "minio-service-account"
  serviceMetadata:
    consoleServiceAnnotations: {}
    consoleServiceLabels: {}
    minioServiceAnnotations: {}
    minioServiceLabels: {}
  subPath: ""
  users:
    - name: photoatom-storage-user
    - name: postgres-storage-user
  buckets:
    - name: photoatom
    - name: postgres
